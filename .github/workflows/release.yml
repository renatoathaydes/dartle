name: Release dartle binary
on:
  release:
    types: [ created ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        run: dart pub get

      - name: Build executable
        run: dart dartle.dart distribution --disable-cache

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/dartle.tar.gz
          asset_name: dartle-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz
          asset_content_type: application/gzip

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        run: dart pub get

      - name: Build executable
        run: dart dartle.dart distribution --disable-cache

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/dartle.tar.gz
          asset_name: dartle-${{ steps.get_version.outputs.VERSION }}-macos.tar.gz
          asset_content_type: application/gzip

  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        run: dart pub get

      - name: Build executable
        run: dart dartle.dart distribution --disable-cache

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/dartle.tar.gz
          asset_name: dartle-${{ steps.get_version.outputs.VERSION }}-windows.tar.gz
          asset_content_type: application/gzip
